name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dash[testing] pytest
      - name: Run integration tests
        run: pytest -m integration
#name: Tests
#
#on:
#  push:
#    branches: [main]
#  pull_request:
#    branches: [main, "release/*", "dev"]
#
#jobs:
#  run_tests_ubuntu:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        python-version: ["3.11", "3.12"]
#      fail-fast: false
#
#    timeout-minutes: 30
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install packages
#        run: |
#          pip install -e .[tests]
#
#      #----------------------------------------------
#      #              run test suite
#      #----------------------------------------------
#      - name: Run tests
#        run: |
#          pytest src/ tests/ -v --doctest-modules --cov=src --junitxml=junit.xml -s
#
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v4.0.1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#      - name: Upload test results to Codecov
#        if: ${{ !cancelled() }}
#        uses: codecov/test-results-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
